openapi: "3.0.1"
info:
  title: API Products
  version: "1.0"
paths:
  /api/products:
    get:
      summary: Gets all the products in the DB
      tags:
        - Products
      responses:
        "200":
          description: Renders product and brings data.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error at get products
    post:
      summary: Adds a new product to the mongo Data base
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/addProduct"
      responses:
        "201":
          description: Product with code "p.code" created successfully
        "404":
          description: Can't create product
  /api/products/mockingProducts:
    get:
      summary: Shows 100 fake products
      tags:
        - Products
      responses:
        "200":
          description: Mocking products generated correctly
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error occurred while generating Mock products
  /api/products/{pid}:
    patch:
      summary: Modifies a product
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: product id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateProduct"
      responses:
        "200":
          description: Product with id {pid} has been updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: An error occurred while updating the product.
    delete:
      summary: Deletes a product
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: product id
      responses:
        "200":
          description: Product with code {pid} deleted successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error occurred deleting the product

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Mongo's id
        name:
          type: string
          description: Product's title
        description:
          type: string
          description: Product's description
        price:
          type: number
          description: Product's price
        thumbnail:
          type: string
          description: Product's image
        code:
          type: string
          description: Product's unique code
        category:
          type: string
          description: Product's category
        status:
          type: boolean
          description: Product's existence
        stock:
          type: number
          description: Product's quantity
  requestBodies:
    addProduct:
      description: Product's info
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Product"
      example:
        name: Gaming monitor
        description: Monitor for gaming, 144hz, IPS
        price: 599
        stock: 10
        code: GM1
        category: Electronics
        status: true
    updateProduct:
      description: Product's info
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Product"
      example:
        price: 100
        stock: 0
        status: false
